{"ast":null,"code":"var _jsxFileName = \"/Users/frostnovus/Documents/GitHub/jsreact/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\"; // import uuid from \"uuid\";\n\nimport \"./App.css\";\nimport Axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title: title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(res => this.setState({\n      todos: res.data\n    }));\n  } //toggle complete\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/frostnovus/Documents/GitHub/jsreact/src/App.js"],"names":["React","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","Axios","App","Component","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","title","post","then","res","data","newTodo","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n// import uuid from \"uuid\";\nimport \"./App.css\";\nimport Axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    todos: []\n  };\n  componentDidMount() {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(\n      res => this.setState({ todos: res.data })\n    );\n  }\n  //toggle complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  //delete todo\n  delTodo = id => {\n    this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    });\n  };\n\n  //add todo\n  addTodo = title => {\n    Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n      title: title,\n      completed: false\n    }).then(res =>\n      this.setState({\n        todos: [...this.state.todos, res.data]\n      })\n    );\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}